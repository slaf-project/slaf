[project]
name = "slafdb"
version = "1.2.4"
description = "Sparse Lazy Array Format - MVP for single-cell data"
authors = [{ name = "Pavan Ramkumar", email = "pavan.ramkumar@gmail.com" }]
readme = "README.md"
license = { text = "Apache-2.0" }
requires-python = ">=3.10,<3.14"

dependencies = [
    # Core dependencies - essential for basic SLAF functionality
    "pylance>=0.31.0", # Lance format storage in core/slaf.py
    "polars>=1.31.0",  # DataFrame operations and SQL queries across all modules
    "numpy>=2.2.0",    # Numerical operations across all modules
    "pandas>=2.3.0",   # DataFrame operations in data, integrations, ml
    "pyarrow>=20.0.0", # Data conversion in data/converter.py
    "scipy>=1.15.0",   # Sparse operations in core and data
    "loguru>=0.7.0",   # Logging functionality across all modules
    # Data conversion - essential for CLI functionality
    "scanpy>=1.11.2",   # For h5ad file conversion
    "h5py>=3.10.0",     # For chunked H5AD reading
    "requests>=2.32.4", # For downloading datasets
    # CLI and utilities
    "typer>=0.9.0",          # CLI framework
    "rich>=14.0.0",          # Rich console output
    "tqdm>=4.67.0",          # Progress bars
    "build>=1.2.2.post1",
    "lancedb>=0.24.2",
    "boto3>=1.40.10",
    "smart-open[s3]>=7.4.1",
]

[project.optional-dependencies]
# Machine learning - for ML modules
ml = ["torch>=2.7.1", "tiledb>=0.34.2", "tiledbsoma>=1.17.1"]

# Advanced single-cell tools
advanced = ["igraph>=0.11.9", "leidenalg>=0.10.2"]

# Development tools
dev = [
    # Development tools
    "pytest>=8.0.0",
    "ruff==0.12.2",
    "mypy>=1.8.0",
    "build>=1.0.0",
    "twine>=4.0.0",

    # Marimo for demo
    "marimo>=0.14.0",
    "matplotlib>=3.10.0",
    "seaborn>=0.13.0",

    # Benchmarking
    "psutil>=6.0.0",

    # Benchmark dependencies
    "scvi-tools>=1.3.3",
    "scdataset>=0.1.1",
    "bionemo-scdl>=0.0.8",

    # Experimental dependencies
    "vortex-data>=0.33.2",
    "datasets>=4.0.0",
    "ray>=2.49.0",

    # Cloud functions
    "modal>=1.2.1",
    "rclone-python>=0.1.23",
]

docs = [
    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.0",
    "mkdocs-autorefs>=0.4.0",
    "mkdocs-awesome-pages-plugin>=2.9.0",
    "mkdocs-macros-plugin>=1.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-git-authors-plugin>=0.8.0",
    "mkdocs-minify-plugin>=0.7.0",
    "mkdocs-redirects>=1.2.0",
]

test = [
    "pytest>=8.0.0",
    "pytest-cov>=6.2.0",
    "coverage>=7.9.1",
    "scanpy>=1.11.2",
    "h5py>=3.10.0",
    "psutil>=6.0.0",
    "torch>=2.7.1",
]

# Full installation includes all optional dependencies
full = ["slafdb[ml,advanced]"]

[project.scripts]
slaf = "slaf.cli:app"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["slaf*"]

[tool.ruff]
target-version = "py312"
line-length = 88
unfixable = ["E501"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by ruff format
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[dependency-groups]
dev = ["pre-commit>=4.2.0", "ruff==0.12.2", "mypy>=1.8.0"]

[tool.mypy]
python_version = "3.12"
warn_return_any = false             # Relax this
warn_unused_configs = false         # Relax this
disallow_untyped_defs = false       # Relax this
disallow_incomplete_defs = false    # Relax this
check_untyped_defs = false          # Relax this
disallow_untyped_decorators = false # Relax this
no_implicit_optional = false        # Relax this
warn_redundant_casts = false        # Relax this
warn_unused_ignores = false         # Relax this
warn_no_return = false              # Relax this
warn_unreachable = false            # Relax this
strict_equality = false             # Relax this
show_error_codes = true
disable_error_code = ["misc"]       # Disable misc errors to preserve performance

[[tool.mypy.overrides]]
module = "numpy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "polars.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "torch.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "rich.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psutil.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "lance.*"
ignore_missing_imports = true
